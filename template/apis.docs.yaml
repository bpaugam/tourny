openapi: 3.0.0
info:
  title: Mes APIs
  description: ''
  version: 0.0.1
servers:
  - url: 'http://127.0.0.1:4010/'
    description: prism mock server
paths:
  /api/tournaments:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tournament'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: get-api-tournaments
      parameters:
        - schema:
            type: string
          in: query
          name: search
        - schema:
            type: string
            enum:
              - startOn
              - '-startsOn'
          in: query
          name: sort
    post:
      summary: ''
      operationId: post-api-tournaments
      responses:
        '201':
          description: Created
          headers:
            Location:
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tournament'
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tournament'
        description: ''
  '/api/tournaments/{tournamentId}':
    parameters:
      - schema:
          type: integer
        name: tournamentId
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tournament'
      operationId: get-api-tournaments-tournamentId
    patch:
      summary: ''
      operationId: patch-api-tournaments-tournamentId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tournament'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tournament'
    delete:
      summary: ''
      operationId: delete-api-tournaments-tournamentId
      responses:
        '200':
          description: OK
        '403':
          description: Forbidden
        '500':
          description: Internal Server Error
  /api/matches:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Match'
      operationId: get-api-games
      parameters:
        - schema:
            type: integer
          in: query
          name: tournamentId
    parameters: []
  '/api/tournaments/{tournamentId}/winner':
    parameters:
      - schema:
          type: string
        name: tournamentId
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
      operationId: get-api-tournaments-tournamentId-winner
      description: ''
    put:
      summary: ''
      operationId: put-api-tournaments-tournamentId-winner
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
        '201':
          description: Created
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '409':
          description: Conflict
        '500':
          description: Internal Server Error
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
components:
  schemas:
    Tournament:
      title: Tournament
      type: object
      description: ''
      properties:
        id:
          type: integer
        name:
          type: string
        startsOn:
          type: string
          format: date
        endsOn:
          type: string
          format: date
        status:
          type: string
          enum:
            - draft
            - ongoing
            - complete
        gamesPerMatch:
          type: string
          enum:
            - bestOfThree
            - bestOfFive
        bracket:
          $ref: ''
        teams:
          $ref: ''
    Player:
      title: Player
      type: object
      properties:
        id:
          type: integer
        givenName:
          type: string
        familyName:
          type: string
        gender:
          type: string
          enum:
            - male
            - female
            - other
        level:
          type: string
          enum:
            - beginner
            - intermediate
            - advanced
            - pro
        teams:
          type: array
          items:
            $ref: '#/components/schemas/Team'
      required:
        - givenName
        - familyName
    Team:
      title: Team
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        players:
          type: array
          items:
            $ref: '#/components/schemas/Player'
        color:
          type: string
    Match:
      title: Match
      type: object
      properties:
        id:
          type: integer
        startAt:
          type: string
          format: date-time
        status:
          type: string
          enum:
            - planned
            - ongoing
            - complete
        games:
          type: array
          items:
            $ref: ''
        teams:
          type: array
          maxItems: 2
          minItems: 0
          items:
            $ref: '#/components/schemas/Team'
        round:
          $ref: ''
        winner:
          $ref: '#/components/schemas/Team'
    Game:
      title: Game
      type: object
      properties:
        id:
          type: string
        index:
          type: integer
        match:
          $ref: '#/components/schemas/Match'
        scores:
          type: array
          maxItems: 2
          minItems: 2
          items:
            $ref: '#/components/schemas/Score'
    Score:
      title: Score
      type: object
      properties:
        id:
          type: string
        team:
          $ref: '#/components/schemas/Team'
        game:
          $ref: '#/components/schemas/Game'
        points:
          type: integer
    Round:
      title: Round
      type: object
      properties:
        id:
          type: string
        matches:
          type: array
          items:
            $ref: '#/components/schemas/Match'
        rank:
          type: integer
        name:
          type: string
        bracket:
          $ref: '#/components/schemas/Bracket'
    Bracket:
      title: Bracket
      type: object
      properties:
        id:
          type: string
        tournament:
          $ref: '#/components/schemas/Tournament'
        rounds:
          type: array
          items:
            $ref: '#/components/schemas/Round'
